/* eslint-disable react/prop-types */
"use client"
import { useRef, useState } from "react"
import SimpleSlider from "../Helpers/SliderCom"
import crea1 from "/src/assets/images/banner_ccbme_shop_pub_1.jpg"
import create_a_credit from "/src/assets/images/crea_a_credit_ccbm_shop.png"
import crea_en_promotion from "/src/assets/images/crea_en_promotion_ccbm_shop.png"
import ccbm_shop_crea_ramadan from "/src/assets/images/ccbm_shop_crea_ramadan.png"

export default function BannerSecond({ className }) {
  const sliderRef = useRef(null)
  const [pressTimer, setPressTimer] = useState(null)
  const [isLoading, setIsLoading] = useState(false)

  const handleMouseDown = (index) => {
    setIsLoading(true)
    const timer = setTimeout(() => {
      const routes = ["/promo-ramadan", "/en-promo", "/credit-commandes"]
      window.location.href = routes[index]
    }, 345) // 2 secondes
    setPressTimer(timer)
  }
  const handleMouseUp = () => {
    if (pressTimer) {
      clearTimeout(pressTimer)
      setIsLoading(false)
    }
  }


  const settings = {
    infinite: true,
    autoplay: true,
    autoplaySpeed: 2000,
    fade: false,
    arrows: false,
    dots: false,
    centerMode: true,
    centerPadding: "10%",
    slidesToShow: 1,
    responsive: [
      {
        breakpoint: 768,
        settings: {
          centerPadding: "10%",
        },
      },
    ],
  }

  const handleImageClick = (index) => {
    const routes = ["/promo-ramadan", "/en-promo", "/credit-commandes",]
    window.location.href = routes[index]
  }

  return (
    <div className={`hero-slider-wrapper w-full mt-24 mb-12 ${className || ""}`}>
      <div className="main-wrapper max-w-7xl mx-auto relative">
        <div className="w-full relative overflow-visible">
          <SimpleSlider settings={settings} selector={sliderRef}>
            {[ccbm_shop_crea_ramadan, crea_en_promotion, crea1, create_a_credit].map((image, index) => (
              <div key={index}
                className="px-2 relative"
                onClick={() => handleImageClick(index)}
                onMouseDown={() => handleMouseDown(index)}
                onMouseUp={handleMouseUp}
                onMouseLeave={handleMouseUp}
                onTouchStart={() => handleMouseDown(index)}
                onTouchEnd={handleMouseUp}


              >

                {/* <div className="item w-full h-[200px] sm:h-[250px] md:h-[300px] lg:h-[350px] xl:h-[400px] cursor-pointer">
                  <div
                    className="w-full h-full bg-center bg-no-repeat bg-contain"
                    style={{
                      backgroundImage: `url(${image})`,
                    }}
                  ></div>
                </div> */}
                <div className="item w-full h-[200px] sm:h-[250px] md:h-[300px] lg:h-[350px] xl:h-[400px] cursor-pointer">
                  <div
                    className="w-full h-full bg-center bg-no-repeat bg-contain"
                    style={{
                      backgroundImage: `url(${image})`,
                    }}
                  />
                  {isLoading && (
                    <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
                      {/* <div className="w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin" /> */}
                    </div>
                  )}
                </div>
              </div>
            ))}
          </SimpleSlider>
        </div>
      </div>
    </div>
  )
}
